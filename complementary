

seq ="AAATGTATGGTGAGTTGGGGACCCGGAAGCCTAACGACAGCTACCATTAGTTATGGTTCGGCCTGGGAATCATTAATTAGCCGTCGCATTGCAGTCCCGTTGCGGCCTGGCAGCGCATCGCCGGCCAGACCGTATACATCCTACTGTGACTAATGCCAAGACACTCTTGTACACTTCGTCGCGCATACTTGTTCTCCGGGTAGCTATCAGGTTCTAAGGAGTTGCAGCTCTTTCGGACAGATAAGGCCTCTCATAATCGTGCTGCATTTTTTAATTCGGATACCTTAACAGGCGTACTATCAATAGTCAACCGGCAAGCTCGGGGTTCTGACGGGGTAGCGCGTCTGACCGCGATCTTCTAAGAACCAATGAATTGCATTAACGCTCTACTGTACCACTCTAAAAATTCCACGGTAAAACCGTACTGCCATACCTCGACATGCGCATGTTAATGTGCAATGTTATCGCGAGAGAGGTGGGGATTACGGGAGGTGTTCCCCAGGGCCCCTCTCTCTTGTAGGAGTACTTGGAACATCGGGCAGCATATCCATTGTGACCGCTCGTTGGCACATCGTGACATTCCCCAGTTCCGTGTCGCTTGGTCACTAGGCGTGAGCAGGTCAATAGAACAGGTACGGCAGCTGAGTAATTGTCTGGTGTGTTCGTACCCTCTTCTTTTCAATAGGTGCTTATAGCGATCTACCCTCAGTGCCTAGTTAGGGTCGAAGCTGACTACTGGCAAGGCCTCCAGCTGGTGTACTTTTACGCAATGTCGATATCAACGCATATTGACGGGCTTAGCCGCCAACCGCGACGAGACGCTGTTTAACAG"


reversed_seq = "".join(reversed(seq))

def comp(reversed_seq):
    dic = {"A":"T", "T": "A", "G": "C", "C": "G"}               
    new_seq = ""                                       # neue sequenz die erstellt wird w채hrend die funktion abl채uft
    for nuc in reversed_seq:                            # f체r jedes nucleotid in der sequenz
        new_seq += dic[nuc]                             # hier wird zur neuen sequenz der entsprechende buchstabe aus dem dic hinzugef체gt
    return new_seq
        
result = comp(reversed_seq)
         

print (result)
